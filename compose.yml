services:
  htsget-rs:
    image: ghcr.io/umccr/htsget-rs:latest
    environment:
      - HTSGET_TICKET_SERVER_CORS_ALLOW_ORIGINS=${HTSGET_TICKET_SERVER_CORS_ALLOW_ORIGINS}
      - HTSGET_TICKET_SERVER_CORS_ALLOW_METHODS=${HTSGET_TICKET_SERVER_CORS_ALLOW_METHODS}
      - HTSGET_TICKET_SERVER_CORS_ALLOW_HEADERS=${HTSGET_TICKET_SERVER_CORS_ALLOW_HEADERS}
      - HTSGET_TICKET_SERVER_CORS_EXPOSE_HEADERS=${HTSGET_TICKET_SERVER_CORS_EXPOSE_HEADERS}
      - HTSGET_TICKET_SERVER_ADDR=${HTSGET_TICKET_SERVER_ADDR}
      - HTSGET_DATA_SERVER_CORS_ALLOW_ORIGINS=${HTSGET_DATA_SERVER_CORS_ALLOW_ORIGINS}
      - HTSGET_DATA_SERVER_CORS_ALLOW_METHODS=${HTSGET_DATA_SERVER_CORS_ALLOW_METHODS}
      - HTSGET_DATA_SERVER_CORS_ALLOW_HEADERS=${HTSGET_DATA_SERVER_CORS_ALLOW_HEADERS}
      - HTSGET_DATA_SERVER_CORS_EXPOSE_HEADERS=${HTSGET_DATA_SERVER_CORS_EXPOSE_HEADERS}
      - HTSGET_DATA_SERVER_ADDR=${HTSGET_DATA_SERVER_ADDR}
      - HTSGET_AUTH=${HTSGET_AUTH}
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - ./data:/data:ro
    depends_on:
      - serve_igvjs
      - serve_raw_data
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8080/reads/service-info"]
      interval: 10s # How often the status will be checked
      retries: 5 # How many times to check before considering it unavailable
      start_period: 10s # How long after startup to begin checks
      timeout: 10s # Timeout for each test run
  serve_igvjs:
    image: python:3-slim
    command: python3 -m http.server 8787 -d /igv.js
    restart: unless-stopped
    ports:
      - "8787:8787"
    volumes:
      - ./igv.js:/igv.js:ro
  serve_raw_data:
    image: python:3-slim
    command: python /app/bin/no_cors_http.py 8082 /data
    restart: unless-stopped
    ports:
      - "8082:8082"
    volumes:
      - ./data:/data:ro
      - ./bin:/app/bin:ro
